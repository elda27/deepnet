
[config]
input = [
  "projections",
  "projections_spacing",
  "label",
  "label_spacing"
]

logging = [
  '__train_iteration__', 
  'train.loss', 'valid.loss'
]

archive_loss = 'loss'
archive_nodes = ['Segnet']
optimizing_loss = ['loss']
freezing_layer = [ 'Segnet.decoder' ]

[hyper_parameter]
n_encode_dim = 512
n_layers = 3
gaussian_sigma = 0.2
n_res_layers = 4


[[process]]
label  = "CAE_label"
type   = "network.cae"
update = "loss"

n_dim = 3
in_channel = 4
out_channel = 4
encode_dim = "${hyper_parameter.n_encode_dim}"
dropout = "dropout"
use_batch_norm = true
n_layers = "${hyper_parameter.n_layers}"
latent_activation = false


[[process]]
label = "Segnet"
type = "network.tl-net.segnet"
update = "loss"

decoder = "CAE_label.decoder"

n_dim = 2
output_shape = [64, 64, 64]

in_channel = 2

[[initialize]]
mode = "load"
name = "CAE"
from_step = 1

[[initialize]]
mode = "share"
from = "CAE_label.decoder"
to = "Segnet.decoder"

# Network declaration
[[network]]
input = ["projections", "label"]
process = "to_gpu"
output = ["gpu_projections", "gpu_f_label"]

[[network]]
input="gpu_f_label"
process="cast_type"
dtype='int32'
output="gpu_label"

[[network]]
input="gpu_projections"
process = "Segnet"
label   = "Segnet"
output  = "gpu_reconstruct_label_probs"

[[network]]
input=[ "gpu_reconstruct_label_probs", "gpu_label" ]
process="chainer.softmax_cross_entropy"
output="loss"
test=false

[[network]]
input="gpu_reconstruct_label_probs"
process="chainer.softmax"
output="gpu_reconstruct_label_softmax_probs"

[[network]]
input="gpu_reconstruct_label_softmax_probs"
process="chainer.argmax"
output="gpu_reconstruct_label"
axis=1


# Visualize declaration
[[visualize]]
type  = "image_write"
image_names = [ 
  "gpu_reconstruct_label", "label"
  ]
spacing = "spacing"
output_filename = '${visualize_dir}/{__train_iteration__:08d}_{__case_name__}_{__name__}_{__index__}.mhd'
num_images = 3

[[visualize]]
type  = "image_write"
image_names = [ 
  "gpu_projections"
  ]
spacing = "projections_spacing"
output_filename = '${visualize_dir}/{__train_iteration__:08d}_{__case_name__}_{__name__}_{__index__}.mhd'
num_images = 3

