
[config]
input = [
  'image'
]
logging = [
  "__train_iteration__",
  "train.loss_euclidean",
  "valid.loss_euclidean"
]
archive_nodes = ['CAE']
optimizing_loss = ['loss_euclidean']


[hyper_parameter]
n_channel = 3


[[process]]
label  = "CAE"
type   = "network.cae"
update = "loss_euclidean"

n_dim = 2
in_out_channel = "${hyper_parameter.n_channel}"
n_layers = 5
dropout = "none"

# Network declaration
[[network]]
input=["image"]
process="to_gpu"
output=["gpu_image"]

[[network]]
input="gpu_image"
process="apply_gaussian_noise"
output="gpu_noisy_image"

[[network]]
input="gpu_noisy_image"
process="CAE"
label="CAE"
output="gpu_reconstruct_image"

## Losses
[[network]]
input=[ "gpu_reconstruct_image", "gpu_image" ]
process="loss.euclidean_distance"
output="loss_euclidean"

# Visualize declaration
[[visualize]]
type  = "image_write"
image_names = [ 
  "gpu_image", "gpu_noisy_image", 
  "gpu_reconstruct_image" 
  ]
output_filename = '${visualize_dir}/{__train_iteration__:08d}_{__index__:03d}_{__name__}.jpg'
num_images = 3

[[visualize]]
type = "tile_image_visualizer"
output_filename = "${visualize_dir}/{__train_iteration__:08d}_tile.png"
tile_shape = [5, 5]
block_images =  [ 
  'gpu_image', 'gpu_noisy_image', 'gpu_reconstruct_image',
  ]
block_shape = [1, 3]
